version: 2.1
commands:
  get-version:
    steps:
      - run:
         name: Getting Package Version
         command: |
          branch=$CIRCLE_BRANCH
          ver=${branch/"release/"/""}
          suffix=${ver#*-}
          build=${ver%-*}
          vertag=""
          if  [ $suffix == "" ] || [ $suffix == $build ]; then
            echo NO SUFFIX
            echo "export PKG_SFX_TAG=""" >> $BASH_ENV
            vertag=NOPE
          else
            echo $"SUFFIX FOUND- {$suffix}"
            vertag=$"--version-suffix $suffix"
            echo $"VERSION TAG- $vertag"
            echo "export PKG_SFX_TAG='$vertag'" >> $BASH_ENV
          fi
          
          echo "export PKG_VER=$build" >> $BASH_ENV
          echo "export PKG_SFX=$suffix" >> $BASH_ENV
orbs:
  sonarcloud: sonarsource/sonarcloud@1.0.3        
jobs:
  get-code:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:8.0
      - image: mcr.microsoft.com/dotnet/sdk:6.0
    working_directory: /mnt/ramdisk
    steps:
      - checkout
      - persist_to_workspace:
          root: .
          paths:
            - LICENSE.txt
            - ./
      
  integration-tests-net6:
    docker:
      #- image: mcr.microsoft.com/dotnet/sdk:8.0
      - image: mcr.microsoft.com/dotnet/sdk:6.0
      # - image: mcr.microsoft.com/dotnet/sdk:9.0
      # - image: postgres
      #   environment:
      #     POSTGRES_USER: postgres
      #     POSTGRES_PASSWORD: postgres
      # - image: mcr.microsoft.com/mssql/server:2022-latest
      #   environment:
      #     MSSQL_SA_PASSWORD: test!1234
      #     ACCEPT_EULA: Y
    working_directory: /mnt/ramdisk
    steps:
      - attach_workspace:
          at: .
      - run:
            name: Run .NET 6.0 Tests
            command: dotnet test src/metallic.sln --configuration Release --framework net6.0
      # - run:
      #       name: Run .NET 8.0 Tests
      #       command: dotnet test src/metallic.sln --configuration Release --framework net8.0
      # - run: dotnet test src/metallic.sln --configuration Release
      
  publish-nuget:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:8.0
    steps:
      - attach_workspace:
          at: .
      - run: dotnet pack ./src/metallic.sln --configuration Release --output ./packages
      - run:
         name: Publish to Nuget
         command: dotnet nuget push packages/*.nupkg --api-key ${NUGET_PUBLISH_KEY} --source https://api.nuget.org/v3/index.json
workflows:
  build-release:
    jobs:
      - get-code
      - integration-tests-net6:
          context: MATHTONE_DEV
          requires:
            - get-code
      - approve-ship:
          filters:
            branches:
               only:
                  - /release.*/
          context: MATHTONE_DEV
          type: approval
          requires:
            - integration-tests-net6
      - publish-nuget:
          filters:
            branches:
               only:
                  - /release.*/
          context: MATHTONE_DEV
          requires:
            - approve-ship